name: ci

on:
    push:
        branches:
            - main
            - master
    pull_request:
        branches:
            - main
            - master

jobs:
    frontend:
        runs-on: ${{ matrix.os }}
        env:
            working-directory: ./frontend

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [14]

        steps:
            - name: Checkout 🛎
              uses: actions/checkout@master

            - name: Setup node env 🏗
              uses: actions/setup-node@v2.4.0
              with:
                  node-version: ${{ matrix.node }}

            - name: Cache node_modules 📦
              uses: actions/cache@v2.1.4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies 👨🏻‍💻
              run: npm ci
              working-directory: ${{env.working-directory}}

            - name: Run linter 👀
              run: npm run lint
              working-directory: ${{env.working-directory}}

            - name: Build Nuxt 🛠
              run: npm run build
              working-directory: ${{env.working-directory}}
    backend:
        runs-on: ${{ matrix.os }}
        env:
            working-directory: ./backend

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [14]

        steps:
            - name: Checkout 🛎
              uses: actions/checkout@master

            - name: Setup node env 🏗
              uses: actions/setup-node@v2.4.0
              with:
                  node-version: ${{ matrix.node }}

            - name: Cache node_modules 📦
              uses: actions/cache@v2.1.4
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: Install dependencies 👨🏻‍💻
              run: npm ci
              working-directory: ${{env.working-directory}}

            - name: Run linter 👀
              run: npm run lint
              working-directory: ${{env.working-directory}}
